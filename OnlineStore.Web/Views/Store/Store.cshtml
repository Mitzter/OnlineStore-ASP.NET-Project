@using OnlineStore.Web.ViewModels.StoreModels;
@model AllItemsQueryModel

@{
    ViewBag.Title = "Store";
}



<h2 class="text-center text-light">@ViewBag.Title</h2>
<hr />
<form method="get">
    <style>
    .section-outline {
        border: 2px solid red;
        padding: 10px;
    }
</style>
<
</>
    <div class="row section-outline align-items-start">
    <div class="col-md-3">
        <div class="form-group mt-3 p-2">
            <input type="submit" value="Search" class="btn btn-outline-danger btn-lg" />
        </div>
    </div>
    <div class="form-group col-md-3 d-flex flex-column justify-content-start text-light">
        <div class="form-group">
            <label asp-for="Category"></label>
            <select asp-for="Category" class="form-control form-control-sm">
                <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
            </select>
        </div>
        <div class="form-group text-light">
            <label asp-for="ItemsPerPage"></label>
            <select asp-for="ItemsPerPage" class="form-control form-control-sm">
                <option value="3">3</option>
                <option value="6">6</option>
                <option value="9">9</option>
            </select>
        </div>
    </div>
    <div class="form-group col-md-3 text-light">
        <label asp-for="SearchString"></label>
        <input asp-for="SearchString" class="form-control form-control-sm" placeholder="...">
    </div>
    <div class="form-group col-md-3 text-light">
        <div class="form-group">
            <label asp-for="ItemSorting"></label>
            <select asp-for="ItemSorting" class="form-control form-control-sm">
                <option value="0">Newest</option>
                <option value="1">Oldest</option>
                <option value="2">Price (Ascending)</option>
                <option value="3">Price (Descending)</option>
                <option value="4">Category</option>
            </select>
        </div>
    </div>
</div>

</form>
@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    int maxPage =(int)Math.Ceiling((double)Model.TotalItems /
    Model.ItemsPerPage);

}

<div class="row mb-5">
     <div class="col-md-1 d-grid gap-2 d-md-flex justify-content-md-start section-outline">
         <a class="btn btn-danger @(Model.CurrentPage == 1 ? "disabled" : 
        string.Empty)"
         asp-controller="House"
         asp-action="All"
         asp-route-currentPage="@previousPage"
         asp-route-category="@Model.Category"
         asp-route-searchTerm="@Model.SearchString"
         asp-route-sorting="@((int)Model.ItemSorting)"><<</a>
     </div>
    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Items.Any();
    }
     <div class="col-md-1 d-grid gap-2 d-md justify-content-md-end section-outline">
         <a class="btn btn-danger         @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
         asp-controller="House"
         asp-action="All"
         asp-route-currentPage="@(Model.CurrentPage + 1)"
         asp-route-category="@Model.Category"
         asp-route-searchTerm="@Model.SearchString"
         asp-route-sorting="@((int)Model.ItemSorting)">>></a>
     </div>
</div>

@if (!Model.Items.Any())
{
     <h2 class="text-center">No items found by the given criteria!</h2>
}
<div class="row">
    @foreach (var item in Model.Items)
    {
     <partial name="_ItemPartial" model="@item" />
    }
</div>

